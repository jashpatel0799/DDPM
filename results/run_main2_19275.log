Mon Jul 22 22:21:04 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 555.42.02              Driver Version: 555.42.02      CUDA Version: 12.5     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:90:00.0 Off |                    0 |
| N/A   46C    P0             61W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
With MNIST
  0%|          | 0/499 [00:00<?, ?it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.2699691..0.9995948].
  0%|          | 1/499 [05:32<45:58:17, 332.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.12223721..0.9091636].
  0%|          | 2/499 [11:02<45:41:38, 330.98s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.10859079..0.9460677].
  1%|          | 3/499 [16:31<45:30:34, 330.31s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.103660055..0.9557971].
  1%|          | 4/499 [22:01<45:23:49, 330.16s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.04541856..0.95787054].
  1%|          | 5/499 [27:31<45:17:23, 330.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.06901149..0.98956096].
  1%|          | 6/499 [33:02<45:13:36, 330.26s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.052278556..0.9815093].
  1%|▏         | 7/499 [38:32<45:09:00, 330.37s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.051204257..1.0104661].
  2%|▏         | 8/499 [44:06<45:11:48, 331.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.05421057..0.9636342].
  2%|▏         | 9/499 [49:40<45:12:10, 332.10s/it]  2%|▏         | 10/499 [54:59<44:34:10, 328.12s/it]  2%|▏         | 11/499 [1:00:17<44:04:13, 325.11s/it]  2%|▏         | 12/499 [1:05:35<43:41:29, 322.98s/it]  3%|▎         | 13/499 [1:10:53<43:23:58, 321.48s/it]  3%|▎         | 14/499 [1:16:11<43:10:23, 320.46s/it]  3%|▎         | 15/499 [1:21:29<42:59:03, 319.72s/it]  3%|▎         | 16/499 [1:26:47<42:49:27, 319.19s/it]  3%|▎         | 17/499 [1:32:05<42:41:33, 318.87s/it]  4%|▎         | 18/499 [1:37:23<42:33:45, 318.56s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.034115553..0.99128824].
  4%|▍         | 19/499 [1:42:55<42:59:52, 322.49s/it]  4%|▍         | 20/499 [1:48:13<42:43:16, 321.08s/it]  4%|▍         | 21/499 [1:53:30<42:29:54, 320.07s/it]  4%|▍         | 22/499 [1:58:48<42:18:35, 319.32s/it]  5%|▍         | 23/499 [2:04:06<42:09:21, 318.83s/it]  5%|▍         | 24/499 [2:09:23<42:01:24, 318.49s/it]  5%|▌         | 25/499 [2:14:41<41:54:11, 318.25s/it]  5%|▌         | 26/499 [2:19:59<41:47:42, 318.10s/it]  5%|▌         | 27/499 [2:25:17<41:41:53, 318.04s/it]  6%|▌         | 28/499 [2:30:35<41:36:12, 317.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.031653512..0.9391036].
  6%|▌         | 29/499 [2:36:06<42:02:31, 322.02s/it]  6%|▌         | 30/499 [2:41:24<41:47:40, 320.81s/it]  6%|▌         | 31/499 [2:46:42<41:35:46, 319.97s/it]  6%|▋         | 32/499 [2:52:00<41:25:38, 319.35s/it]  7%|▋         | 33/499 [2:57:18<41:16:58, 318.92s/it]  7%|▋         | 34/499 [3:02:36<41:09:23, 318.63s/it]  7%|▋         | 35/499 [3:07:54<41:02:13, 318.39s/it]  7%|▋         | 36/499 [3:13:12<40:55:48, 318.25s/it]  7%|▋         | 37/499 [3:18:29<40:49:42, 318.14s/it]  8%|▊         | 38/499 [3:23:48<40:44:10, 318.11s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.033411846..0.9753485].
  8%|▊         | 39/499 [3:29:19<41:08:37, 322.00s/it]  8%|▊         | 40/499 [3:34:37<40:54:09, 320.80s/it]  8%|▊         | 41/499 [3:39:55<40:42:13, 319.94s/it]  8%|▊         | 42/499 [3:45:12<40:31:58, 319.30s/it]  9%|▊         | 43/499 [3:50:30<40:23:26, 318.87s/it]  9%|▉         | 44/499 [3:55:48<40:15:56, 318.59s/it]  9%|▉         | 45/499 [4:01:06<40:09:15, 318.40s/it]  9%|▉         | 46/499 [4:06:24<40:02:47, 318.25s/it]  9%|▉         | 47/499 [4:11:42<39:56:44, 318.15s/it] 10%|▉         | 48/499 [4:17:00<39:50:52, 318.08s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.03250423..0.954208].
 10%|▉         | 49/499 [4:22:31<40:15:45, 322.10s/it] 10%|█         | 50/499 [4:27:49<40:00:19, 320.76s/it] 10%|█         | 51/499 [4:33:07<39:48:13, 319.85s/it] 10%|█         | 52/499 [4:38:24<39:37:48, 319.17s/it] 11%|█         | 53/499 [4:43:42<39:28:55, 318.69s/it] 11%|█         | 54/499 [4:48:59<39:21:02, 318.34s/it] 11%|█         | 55/499 [4:54:17<39:13:59, 318.11s/it] 11%|█         | 56/499 [4:59:34<39:07:25, 317.94s/it] 11%|█▏        | 57/499 [5:04:52<39:01:11, 317.81s/it] 12%|█▏        | 58/499 [5:10:10<38:55:27, 317.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.026689554..0.91762155].
 12%|█▏        | 59/499 [5:15:41<39:19:44, 321.78s/it] 12%|█▏        | 60/499 [5:20:58<39:05:10, 320.52s/it] 12%|█▏        | 61/499 [5:26:16<38:53:16, 319.63s/it] 12%|█▏        | 62/499 [5:31:34<38:43:38, 319.04s/it] 13%|█▎        | 63/499 [5:36:51<38:35:11, 318.60s/it] 13%|█▎        | 64/499 [5:42:09<38:27:39, 318.30s/it] 13%|█▎        | 65/499 [5:47:26<38:20:44, 318.07s/it] 13%|█▎        | 66/499 [5:52:44<38:14:29, 317.94s/it] 13%|█▎        | 67/499 [5:58:02<38:08:32, 317.85s/it] 14%|█▎        | 68/499 [6:03:19<38:02:30, 317.75s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.024974516..0.9906463].
 14%|█▍        | 69/499 [6:08:51<38:27:08, 321.93s/it] 14%|█▍        | 70/499 [6:14:08<38:12:09, 320.58s/it] 14%|█▍        | 71/499 [6:19:25<37:59:49, 319.60s/it] 14%|█▍        | 72/499 [6:24:43<37:49:35, 318.91s/it] 15%|█▍        | 73/499 [6:30:00<37:41:00, 318.45s/it] 15%|█▍        | 74/499 [6:35:17<37:33:13, 318.10s/it] 15%|█▌        | 75/499 [6:40:35<37:26:00, 317.83s/it] 15%|█▌        | 76/499 [6:45:52<37:19:42, 317.69s/it] 15%|█▌        | 77/499 [6:51:09<37:13:39, 317.58s/it] 16%|█▌        | 78/499 [6:56:27<37:07:52, 317.51s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.023820631..0.9901742].
 16%|█▌        | 79/499 [7:01:58<37:32:01, 321.72s/it] 16%|█▌        | 80/499 [7:07:16<37:17:24, 320.39s/it] 16%|█▌        | 81/499 [7:12:33<37:05:15, 319.42s/it] 16%|█▋        | 82/499 [7:17:50<36:55:31, 318.78s/it] 17%|█▋        | 83/499 [7:23:07<36:47:19, 318.37s/it] 17%|█▋        | 84/499 [7:28:25<36:39:53, 318.06s/it] 17%|█▋        | 85/499 [7:33:42<36:33:02, 317.83s/it] 17%|█▋        | 86/499 [7:38:59<36:26:49, 317.70s/it] 17%|█▋        | 87/499 [7:44:17<36:20:40, 317.57s/it] 18%|█▊        | 88/499 [7:49:34<36:14:39, 317.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.022722362..0.9264638].
 18%|█▊        | 89/499 [7:55:05<36:37:24, 321.57s/it] 18%|█▊        | 90/499 [8:00:22<36:23:24, 320.30s/it] 18%|█▊        | 91/499 [8:05:40<36:12:00, 319.41s/it] 18%|█▊        | 92/499 [8:10:57<36:02:23, 318.78s/it] 19%|█▊        | 93/499 [8:16:14<35:54:05, 318.34s/it] 19%|█▉        | 94/499 [8:21:32<35:46:29, 318.00s/it] 19%|█▉        | 95/499 [8:26:49<35:39:34, 317.76s/it] 19%|█▉        | 96/499 [8:32:06<35:33:17, 317.61s/it] 19%|█▉        | 97/499 [8:37:23<35:27:28, 317.53s/it] 20%|█▉        | 98/499 [8:42:41<35:21:42, 317.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.02313096..0.93793315].
 20%|█▉        | 99/499 [8:48:12<35:43:53, 321.58s/it] 20%|██        | 100/499 [8:53:29<35:30:12, 320.33s/it] 20%|██        | 101/499 [8:58:47<35:18:59, 319.45s/it] 20%|██        | 102/499 [9:04:04<35:09:38, 318.84s/it] 21%|██        | 103/499 [9:09:22<35:01:34, 318.42s/it] 21%|██        | 104/499 [9:14:39<34:54:37, 318.17s/it] 21%|██        | 105/499 [9:19:57<34:48:03, 317.98s/it] 21%|██        | 106/499 [9:25:14<34:41:40, 317.81s/it] 21%|██▏       | 107/499 [9:30:31<34:35:25, 317.67s/it] 22%|██▏       | 108/499 [9:35:49<34:29:40, 317.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.0213963..0.9461787].
 22%|██▏       | 109/499 [9:41:20<34:50:57, 321.69s/it] 22%|██▏       | 110/499 [9:46:37<34:37:01, 320.36s/it] 22%|██▏       | 111/499 [9:51:55<34:25:55, 319.47s/it] 22%|██▏       | 112/499 [9:57:12<34:16:21, 318.82s/it] 23%|██▎       | 113/499 [10:02:29<34:07:54, 318.33s/it] 23%|██▎       | 114/499 [10:07:46<34:00:22, 317.98s/it] 23%|██▎       | 115/499 [10:13:04<33:53:39, 317.76s/it] 23%|██▎       | 116/499 [10:18:21<33:47:31, 317.63s/it] 23%|██▎       | 117/499 [10:23:38<33:41:52, 317.57s/it] 24%|██▎       | 118/499 [10:28:56<33:36:25, 317.55s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.021633776..0.8893918].
 24%|██▍       | 119/499 [10:34:27<33:57:14, 321.67s/it] 24%|██▍       | 120/499 [10:39:45<33:43:47, 320.39s/it] 24%|██▍       | 121/499 [10:45:02<33:32:57, 319.52s/it] 24%|██▍       | 122/499 [10:50:19<33:23:42, 318.89s/it] 25%|██▍       | 123/499 [10:55:37<33:15:45, 318.47s/it] 25%|██▍       | 124/499 [11:00:54<33:08:18, 318.13s/it] 25%|██▌       | 125/499 [11:06:12<33:01:40, 317.92s/it] 25%|██▌       | 126/499 [11:11:29<32:55:58, 317.85s/it] 25%|██▌       | 127/499 [11:16:47<32:50:49, 317.88s/it] 26%|██▌       | 128/499 [11:22:06<32:46:06, 317.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.020758849..0.897251].
 26%|██▌       | 129/499 [11:27:38<33:07:14, 322.26s/it] 26%|██▌       | 130/499 [11:32:56<32:54:19, 321.03s/it] 26%|██▋       | 131/499 [11:38:14<32:43:58, 320.21s/it] 26%|██▋       | 132/499 [11:43:32<32:34:16, 319.50s/it] 27%|██▋       | 133/499 [11:48:50<32:25:28, 318.93s/it] 27%|██▋       | 134/499 [11:54:07<32:17:48, 318.54s/it] 27%|██▋       | 135/499 [11:59:25<32:10:46, 318.26s/it] 27%|██▋       | 136/499 [12:04:43<32:04:28, 318.10s/it] 27%|██▋       | 137/499 [12:10:00<31:58:15, 317.94s/it] 28%|██▊       | 138/499 [12:15:18<31:52:18, 317.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.023788651..0.9649321].
 28%|██▊       | 139/499 [12:20:49<32:11:34, 321.93s/it] 28%|██▊       | 140/499 [12:26:07<31:58:28, 320.64s/it] 28%|██▊       | 141/499 [12:31:25<31:47:48, 319.74s/it] 28%|██▊       | 142/499 [12:36:42<31:38:54, 319.14s/it] 29%|██▊       | 143/499 [12:42:00<31:31:11, 318.74s/it] 29%|██▉       | 144/499 [12:47:18<31:23:58, 318.42s/it] 29%|██▉       | 145/499 [12:52:35<31:17:22, 318.20s/it] 29%|██▉       | 146/499 [12:57:53<31:11:15, 318.06s/it] 29%|██▉       | 147/499 [13:03:11<31:05:12, 317.93s/it] 30%|██▉       | 148/499 [13:08:29<30:59:27, 317.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.018327488..0.88527954].
 30%|██▉       | 149/499 [13:13:59<31:15:59, 321.60s/it] 30%|███       | 150/499 [13:19:17<31:03:59, 320.46s/it] 30%|███       | 151/499 [13:24:34<30:53:50, 319.63s/it] 30%|███       | 152/499 [13:29:52<30:45:14, 319.06s/it] 31%|███       | 153/499 [13:35:10<30:37:44, 318.68s/it] 31%|███       | 154/499 [13:40:29<30:32:36, 318.71s/it] 31%|███       | 155/499 [13:45:48<30:28:06, 318.86s/it] 31%|███▏      | 156/499 [13:51:07<30:24:04, 319.08s/it] 31%|███▏      | 157/499 [13:56:27<30:20:13, 319.34s/it] 32%|███▏      | 158/499 [14:01:48<30:16:30, 319.62s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.019112151..0.91183114].
 32%|███▏      | 159/499 [14:07:22<30:36:14, 324.04s/it] 32%|███▏      | 160/499 [14:12:43<30:25:05, 323.03s/it] 32%|███▏      | 161/499 [14:18:04<30:16:03, 322.38s/it] 32%|███▏      | 162/499 [14:23:24<30:07:42, 321.85s/it] 33%|███▎      | 163/499 [14:28:44<29:58:59, 321.25s/it] 33%|███▎      | 164/499 [14:34:04<29:51:36, 320.89s/it] 33%|███▎      | 165/499 [14:39:24<29:44:34, 320.58s/it] 33%|███▎      | 166/499 [14:44:44<29:37:53, 320.34s/it] 33%|███▎      | 167/499 [14:50:03<29:31:27, 320.14s/it] 34%|███▎      | 168/499 [14:55:23<29:25:35, 320.05s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.023858292..0.9500438].
 34%|███▍      | 169/499 [15:00:57<29:42:15, 324.05s/it] 34%|███▍      | 170/499 [15:06:17<29:30:26, 322.88s/it] 34%|███▍      | 171/499 [15:11:37<29:20:51, 322.11s/it] 34%|███▍      | 172/499 [15:16:57<29:12:18, 321.53s/it] 35%|███▍      | 173/499 [15:22:17<29:04:22, 321.05s/it] 35%|███▍      | 174/499 [15:27:37<28:57:32, 320.78s/it] 35%|███▌      | 175/499 [15:32:58<28:51:20, 320.62s/it] 35%|███▌      | 176/499 [15:38:18<28:45:11, 320.47s/it] 35%|███▌      | 177/499 [15:43:38<28:39:21, 320.38s/it] 36%|███▌      | 178/499 [15:48:58<28:33:39, 320.31s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.020172019..0.9140831].
 36%|███▌      | 179/499 [15:54:32<28:50:14, 324.42s/it] 36%|███▌      | 180/499 [15:59:52<28:37:48, 323.10s/it] 36%|███▋      | 181/499 [16:05:12<28:27:52, 322.24s/it] 36%|███▋      | 182/499 [16:10:32<28:18:47, 321.54s/it] 37%|███▋      | 183/499 [16:15:52<28:11:16, 321.13s/it] 37%|███▋      | 184/499 [16:21:12<28:04:06, 320.78s/it] 37%|███▋      | 185/499 [16:26:32<27:57:40, 320.57s/it] 37%|███▋      | 186/499 [16:31:52<27:51:14, 320.37s/it] 37%|███▋      | 187/499 [16:37:12<27:45:24, 320.27s/it] 38%|███▊      | 188/499 [16:42:32<27:39:31, 320.17s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.01894139..0.906848].
 38%|███▊      | 189/499 [16:48:06<27:55:37, 324.31s/it] 38%|███▊      | 190/499 [16:53:26<27:43:26, 323.00s/it] 38%|███▊      | 191/499 [16:58:46<27:33:18, 322.07s/it] 38%|███▊      | 192/499 [17:04:06<27:24:55, 321.49s/it] 39%|███▊      | 193/499 [17:09:26<27:17:39, 321.11s/it] 39%|███▉      | 194/499 [17:14:47<27:11:48, 321.01s/it] 39%|███▉      | 195/499 [17:20:08<27:06:29, 321.02s/it] 39%|███▉      | 196/499 [17:25:28<26:59:33, 320.70s/it] 39%|███▉      | 197/499 [17:30:48<26:52:13, 320.31s/it] 40%|███▉      | 198/499 [17:36:06<26:44:21, 319.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.025546027..0.8986092].
 40%|███▉      | 199/499 [17:41:39<26:58:25, 323.68s/it] 40%|████      | 200/499 [17:46:58<26:45:31, 322.18s/it] 40%|████      | 201/499 [17:52:17<26:36:14, 321.39s/it] 40%|████      | 202/499 [17:57:37<26:28:03, 320.82s/it] 41%|████      | 203/499 [18:02:57<26:21:26, 320.56s/it] 41%|████      | 204/499 [18:08:16<26:14:25, 320.22s/it] 41%|████      | 205/499 [18:13:35<26:07:07, 319.82s/it] 41%|████▏     | 206/499 [18:18:54<26:00:53, 319.64s/it] 41%|████▏     | 207/499 [18:24:13<25:54:41, 319.46s/it] 42%|████▏     | 208/499 [18:29:33<25:49:44, 319.53s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.01979746..0.9121088].
 42%|████▏     | 209/499 [18:35:07<26:05:52, 323.97s/it] 42%|████▏     | 210/499 [18:40:27<25:54:29, 322.73s/it] 42%|████▏     | 211/499 [18:45:47<25:44:44, 321.82s/it] 42%|████▏     | 212/499 [18:51:06<25:36:08, 321.14s/it] 43%|████▎     | 213/499 [18:56:26<25:28:39, 320.70s/it] 43%|████▎     | 214/499 [19:01:46<25:21:54, 320.40s/it] 43%|████▎     | 215/499 [19:07:05<25:15:42, 320.22s/it] 43%|████▎     | 216/499 [19:12:25<25:09:50, 320.11s/it] 43%|████▎     | 217/499 [19:17:45<25:03:11, 319.83s/it] 44%|████▎     | 218/499 [19:23:03<24:56:38, 319.57s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.024296584..0.9406071].
 44%|████▍     | 219/499 [19:28:37<25:10:37, 323.70s/it] 44%|████▍     | 220/499 [19:33:56<24:58:41, 322.30s/it] 44%|████▍     | 221/499 [19:39:15<24:48:48, 321.33s/it] 44%|████▍     | 222/499 [19:44:34<24:40:09, 320.61s/it] 45%|████▍     | 223/499 [19:49:53<24:32:28, 320.10s/it] 45%|████▍     | 224/499 [19:55:12<24:25:31, 319.75s/it] 45%|████▌     | 225/499 [20:00:31<24:18:57, 319.48s/it] 45%|████▌     | 226/499 [20:05:49<24:12:43, 319.28s/it] 45%|████▌     | 227/499 [20:11:08<24:06:55, 319.17s/it] 46%|████▌     | 228/499 [20:16:27<24:01:14, 319.09s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.022265371..0.9232111].
 46%|████▌     | 229/499 [20:22:00<24:14:25, 323.21s/it] 46%|████▌     | 230/499 [20:27:19<24:03:09, 321.89s/it] 46%|████▋     | 231/499 [20:32:38<23:54:10, 321.09s/it] 46%|████▋     | 232/499 [20:37:57<23:45:58, 320.44s/it] 47%|████▋     | 233/499 [20:43:16<23:38:31, 319.97s/it] 47%|████▋     | 234/499 [20:48:35<23:31:48, 319.66s/it] 47%|████▋     | 235/499 [20:53:54<23:25:44, 319.49s/it] 47%|████▋     | 236/499 [20:59:13<23:19:53, 319.37s/it] 47%|████▋     | 237/499 [21:04:32<23:13:57, 319.23s/it] 48%|████▊     | 238/499 [21:09:51<23:08:31, 319.20s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.026102591..0.9360251].
 48%|████▊     | 239/499 [21:15:24<23:20:34, 323.21s/it] 48%|████▊     | 240/499 [21:20:42<23:09:32, 321.90s/it] 48%|████▊     | 241/499 [21:26:02<23:01:30, 321.28s/it] 48%|████▊     | 242/499 [21:31:21<22:53:27, 320.65s/it] 49%|████▊     | 243/499 [21:36:40<22:46:06, 320.18s/it] 49%|████▉     | 244/499 [21:41:59<22:39:10, 319.80s/it] 49%|████▉     | 245/499 [21:47:18<22:32:49, 319.56s/it] 49%|████▉     | 246/499 [21:52:37<22:26:45, 319.39s/it] 49%|████▉     | 247/499 [21:57:56<22:20:44, 319.22s/it] 50%|████▉     | 248/499 [22:03:15<22:14:56, 319.11s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.02784507..0.96073043].
 50%|████▉     | 249/499 [22:08:48<22:27:23, 323.38s/it] 50%|█████     | 250/499 [22:14:07<22:16:39, 322.09s/it] 50%|█████     | 251/499 [22:19:27<22:07:32, 321.18s/it] 51%|█████     | 252/499 [22:24:45<21:59:16, 320.47s/it] 51%|█████     | 253/499 [22:30:04<21:51:45, 319.94s/it] 51%|█████     | 254/499 [22:35:23<21:44:49, 319.55s/it] 51%|█████     | 255/499 [22:40:41<21:38:26, 319.29s/it] 51%|█████▏    | 256/499 [22:46:00<21:32:13, 319.07s/it] 52%|█████▏    | 257/499 [22:51:18<21:26:09, 318.88s/it] 52%|█████▏    | 258/499 [22:56:37<21:20:15, 318.74s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.026563536..0.9736826].
 52%|█████▏    | 259/499 [23:02:08<21:29:52, 322.47s/it] 52%|█████▏    | 260/499 [23:07:26<21:19:31, 321.22s/it] 52%|█████▏    | 261/499 [23:12:45<21:10:39, 320.34s/it] 53%|█████▎    | 262/499 [23:18:03<21:02:57, 319.74s/it] 53%|█████▎    | 263/499 [23:23:21<20:56:00, 319.32s/it] 53%|█████▎    | 264/499 [23:28:40<20:49:34, 319.04s/it] 53%|█████▎    | 265/499 [23:33:58<20:43:17, 318.79s/it] 53%|█████▎    | 266/499 [23:39:16<20:37:22, 318.64s/it] 54%|█████▎    | 267/499 [23:44:34<20:31:39, 318.53s/it] 54%|█████▎    | 268/499 [23:49:53<20:26:21, 318.54s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.02626352..0.9733048].
 54%|█████▍    | 269/499 [23:55:23<20:34:17, 321.99s/it] 54%|█████▍    | 270/499 [24:00:41<20:24:44, 320.89s/it] 54%|█████▍    | 271/499 [24:06:00<20:16:31, 320.14s/it] 55%|█████▍    | 272/499 [24:11:18<20:09:19, 319.64s/it] 55%|█████▍    | 273/499 [24:16:37<20:02:33, 319.26s/it] 55%|█████▍    | 274/499 [24:21:55<19:56:16, 319.01s/it] 55%|█████▌    | 275/499 [24:27:13<19:50:10, 318.80s/it] 55%|█████▌    | 276/499 [24:32:32<19:44:21, 318.66s/it] 56%|█████▌    | 277/499 [24:37:50<19:38:37, 318.55s/it] 56%|█████▌    | 278/499 [24:43:08<19:32:59, 318.46s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.024654334..0.9261363].
 56%|█████▌    | 279/499 [24:48:41<19:43:19, 322.73s/it] 56%|█████▌    | 280/499 [24:53:59<19:33:10, 321.42s/it] 56%|█████▋    | 281/499 [24:59:18<19:24:29, 320.50s/it] 57%|█████▋    | 282/499 [25:04:36<19:16:54, 319.88s/it] 57%|█████▋    | 283/499 [25:09:54<19:10:00, 319.45s/it] 57%|█████▋    | 284/499 [25:15:13<19:03:34, 319.14s/it] 57%|█████▋    | 285/499 [25:20:31<18:57:20, 318.88s/it] 57%|█████▋    | 286/499 [25:25:50<18:51:36, 318.76s/it] 58%|█████▊    | 287/499 [25:31:08<18:45:53, 318.65s/it] 58%|█████▊    | 288/499 [25:36:26<18:40:07, 318.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.023450151..0.94831693].
 58%|█████▊    | 289/499 [25:41:59<18:49:31, 322.72s/it] 58%|█████▊    | 290/499 [25:47:17<18:39:37, 321.42s/it] 58%|█████▊    | 291/499 [25:52:36<18:31:04, 320.50s/it] 59%|█████▊    | 292/499 [25:57:54<18:23:29, 319.86s/it] 59%|█████▊    | 293/499 [26:03:12<18:16:41, 319.42s/it] 59%|█████▉    | 294/499 [26:08:31<18:10:09, 319.07s/it] 59%|█████▉    | 295/499 [26:13:49<18:03:49, 318.77s/it] 59%|█████▉    | 296/499 [26:19:07<17:57:59, 318.62s/it] 60%|█████▉    | 297/499 [26:24:25<17:52:29, 318.56s/it] 60%|█████▉    | 298/499 [26:29:44<17:47:14, 318.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.02511794..0.9558623].
 60%|█████▉    | 299/499 [26:35:17<17:56:08, 322.84s/it] 60%|██████    | 300/499 [26:40:35<17:46:43, 321.63s/it] 60%|██████    | 301/499 [26:45:54<17:38:07, 320.65s/it] 61%|██████    | 302/499 [26:51:12<17:30:24, 319.92s/it] 61%|██████    | 303/499 [26:56:31<17:23:42, 319.50s/it] 61%|██████    | 304/499 [27:01:49<17:17:37, 319.27s/it] 61%|██████    | 305/499 [27:07:08<17:11:45, 319.10s/it] 61%|██████▏   | 306/499 [27:12:26<17:05:47, 318.90s/it] 62%|██████▏   | 307/499 [27:17:45<17:00:13, 318.82s/it] 62%|██████▏   | 308/499 [27:23:03<16:54:26, 318.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.019333407..0.92923373].
 62%|██████▏   | 309/499 [27:28:36<17:02:16, 322.83s/it] 62%|██████▏   | 310/499 [27:33:54<16:52:48, 321.53s/it] 62%|██████▏   | 311/499 [27:39:13<16:44:38, 320.63s/it] 63%|██████▎   | 312/499 [27:44:32<16:37:33, 320.07s/it] 63%|██████▎   | 313/499 [27:49:50<16:30:59, 319.67s/it] 63%|██████▎   | 314/499 [27:55:09<16:24:47, 319.39s/it] 63%|██████▎   | 315/499 [28:00:28<16:18:39, 319.13s/it] 63%|██████▎   | 316/499 [28:05:46<16:12:49, 318.96s/it] 64%|██████▎   | 317/499 [28:11:05<16:07:15, 318.87s/it] 64%|██████▎   | 318/499 [28:16:24<16:01:54, 318.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.021432728..0.93293375].
 64%|██████▍   | 319/499 [28:21:57<16:09:07, 323.04s/it] 64%|██████▍   | 320/499 [28:27:15<16:00:00, 321.79s/it] 64%|██████▍   | 321/499 [28:32:34<15:51:49, 320.84s/it] 65%|██████▍   | 322/499 [28:37:53<15:44:28, 320.16s/it] 65%|██████▍   | 323/499 [28:43:11<15:37:48, 319.71s/it] 65%|██████▍   | 324/499 [28:48:30<15:31:46, 319.47s/it] 65%|██████▌   | 325/499 [28:53:49<15:25:47, 319.24s/it] 65%|██████▌   | 326/499 [28:59:08<15:20:09, 319.13s/it] 66%|██████▌   | 327/499 [29:04:26<15:14:25, 318.98s/it] 66%|██████▌   | 328/499 [29:09:45<15:08:46, 318.87s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.022604443..0.93239343].
 66%|██████▌   | 329/499 [29:15:17<15:14:41, 322.83s/it] 66%|██████▌   | 330/499 [29:20:36<15:05:49, 321.60s/it] 66%|██████▋   | 331/499 [29:25:55<14:58:07, 320.76s/it] 67%|██████▋   | 332/499 [29:31:13<14:51:00, 320.12s/it] 67%|██████▋   | 333/499 [29:36:32<14:44:20, 319.64s/it] 67%|██████▋   | 334/499 [29:41:50<14:38:12, 319.35s/it] 67%|██████▋   | 335/499 [29:47:09<14:32:15, 319.12s/it] 67%|██████▋   | 336/499 [29:52:28<14:26:29, 318.95s/it] 68%|██████▊   | 337/499 [29:57:46<14:20:54, 318.86s/it] 68%|██████▊   | 338/499 [30:03:05<14:15:30, 318.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.03137246..0.96432245].
 68%|██████▊   | 339/499 [30:08:38<14:21:09, 322.93s/it] 68%|██████▊   | 340/499 [30:13:56<14:12:23, 321.66s/it] 68%|██████▊   | 341/499 [30:19:15<14:04:42, 320.78s/it] 69%|██████▊   | 342/499 [30:24:34<13:57:39, 320.13s/it] 69%|██████▊   | 343/499 [30:29:52<13:51:07, 319.66s/it] 69%|██████▉   | 344/499 [30:35:11<13:44:54, 319.32s/it] 69%|██████▉   | 345/499 [30:40:29<13:39:00, 319.10s/it] 69%|██████▉   | 346/499 [30:45:48<13:33:21, 318.97s/it] 70%|██████▉   | 347/499 [30:51:06<13:27:44, 318.85s/it] 70%|██████▉   | 348/499 [30:56:25<13:22:14, 318.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.020192223..0.9847607].
 70%|██████▉   | 349/499 [31:01:57<13:27:04, 322.83s/it] 70%|███████   | 350/499 [31:07:16<13:18:31, 321.55s/it] 70%|███████   | 351/499 [31:12:35<13:11:07, 320.73s/it] 71%|███████   | 352/499 [31:17:53<13:04:13, 320.09s/it] 71%|███████   | 353/499 [31:23:12<12:57:46, 319.64s/it] 71%|███████   | 354/499 [31:28:30<12:51:42, 319.33s/it] 71%|███████   | 355/499 [31:33:49<12:45:49, 319.09s/it] 71%|███████▏  | 356/499 [31:39:08<12:40:14, 318.98s/it] 72%|███████▏  | 357/499 [31:44:26<12:34:31, 318.82s/it] 72%|███████▏  | 358/499 [31:49:45<12:29:00, 318.73s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.031169146..0.96330804].
 72%|███████▏  | 359/499 [31:55:17<12:33:13, 322.81s/it] 72%|███████▏  | 360/499 [32:00:35<12:24:47, 321.49s/it] 72%|███████▏  | 361/499 [32:05:54<12:17:17, 320.56s/it] 73%|███████▎  | 362/499 [32:11:12<12:10:35, 319.97s/it] 73%|███████▎  | 363/499 [32:16:31<12:04:13, 319.51s/it] 73%|███████▎  | 364/499 [32:21:49<11:58:07, 319.17s/it] 73%|███████▎  | 365/499 [32:27:08<11:52:29, 319.03s/it] 73%|███████▎  | 366/499 [32:32:27<11:46:56, 318.92s/it] 74%|███████▎  | 367/499 [32:37:45<11:41:16, 318.76s/it] 74%|███████▎  | 368/499 [32:43:04<11:35:52, 318.72s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.028285325..0.89780664].
 74%|███████▍  | 369/499 [32:48:36<11:39:22, 322.79s/it] 74%|███████▍  | 370/499 [32:53:55<11:31:22, 321.57s/it] 74%|███████▍  | 371/499 [32:59:13<11:24:03, 320.65s/it] 75%|███████▍  | 372/499 [33:04:32<11:17:18, 319.99s/it] 75%|███████▍  | 373/499 [33:09:50<11:11:03, 319.55s/it] 75%|███████▍  | 374/499 [33:15:09<11:05:06, 319.25s/it] 75%|███████▌  | 375/499 [33:20:27<10:59:20, 319.04s/it] 75%|███████▌  | 376/499 [33:25:46<10:53:53, 318.97s/it] 76%|███████▌  | 377/499 [33:31:05<10:48:25, 318.90s/it] 76%|███████▌  | 378/499 [33:36:23<10:42:51, 318.77s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.031341583..0.9804454].
 76%|███████▌  | 379/499 [33:41:56<10:45:56, 322.97s/it] 76%|███████▌  | 380/499 [33:47:15<10:37:57, 321.66s/it] 76%|███████▋  | 381/499 [33:52:33<10:30:44, 320.71s/it] 77%|███████▋  | 382/499 [33:57:52<10:24:13, 320.11s/it] 77%|███████▋  | 383/499 [34:03:11<10:18:08, 319.73s/it] 77%|███████▋  | 384/499 [34:08:29<10:12:05, 319.35s/it] 77%|███████▋  | 385/499 [34:13:48<10:06:19, 319.12s/it] 77%|███████▋  | 386/499 [34:19:06<10:00:43, 318.97s/it] 78%|███████▊  | 387/499 [34:24:25<9:55:08, 318.82s/it]  78%|███████▊  | 388/499 [34:29:43<9:49:42, 318.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.033563495..0.94334424].
 78%|███████▊  | 389/499 [34:35:17<9:52:19, 323.08s/it] 78%|███████▊  | 390/499 [34:40:35<9:44:31, 321.75s/it] 78%|███████▊  | 391/499 [34:45:54<9:37:34, 320.88s/it] 79%|███████▊  | 392/499 [34:51:13<9:31:10, 320.28s/it] 79%|███████▉  | 393/499 [34:56:32<9:25:00, 319.81s/it] 79%|███████▉  | 394/499 [35:01:50<9:19:03, 319.46s/it] 79%|███████▉  | 395/499 [35:07:09<9:13:16, 319.20s/it] 79%|███████▉  | 396/499 [35:12:28<9:07:41, 319.05s/it] 80%|███████▉  | 397/499 [35:17:46<9:02:13, 318.96s/it] 80%|███████▉  | 398/499 [35:23:05<8:56:44, 318.86s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.019963803..0.96801984].
 80%|███████▉  | 399/499 [35:28:38<8:58:21, 323.02s/it] 80%|████████  | 400/499 [35:33:56<8:50:48, 321.70s/it] 80%|████████  | 401/499 [35:39:15<8:43:54, 320.76s/it] 81%|████████  | 402/499 [35:44:33<8:37:31, 320.11s/it] 81%|████████  | 403/499 [35:49:52<8:31:30, 319.69s/it] 81%|████████  | 404/499 [35:55:11<8:25:42, 319.39s/it] 81%|████████  | 405/499 [36:00:29<8:20:00, 319.16s/it] 81%|████████▏ | 406/499 [36:05:48<8:14:26, 319.00s/it] 82%|████████▏ | 407/499 [36:11:07<8:08:57, 318.88s/it] 82%|████████▏ | 408/499 [36:16:25<8:03:30, 318.80s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.025124917..0.9695723].
 82%|████████▏ | 409/499 [36:21:58<8:04:18, 322.87s/it] 82%|████████▏ | 410/499 [36:27:16<7:57:06, 321.64s/it] 82%|████████▏ | 411/499 [36:32:35<7:50:25, 320.74s/it] 83%|████████▎ | 412/499 [36:37:54<7:44:10, 320.12s/it] 83%|████████▎ | 413/499 [36:43:12<7:38:13, 319.69s/it] 83%|████████▎ | 414/499 [36:48:31<7:32:29, 319.41s/it] 83%|████████▎ | 415/499 [36:53:50<7:26:52, 319.20s/it] 83%|████████▎ | 416/499 [36:59:09<7:21:21, 319.06s/it] 84%|████████▎ | 417/499 [37:04:27<7:15:57, 318.99s/it] 84%|████████▍ | 418/499 [37:09:46<7:10:31, 318.91s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.033506922..0.9691947].
 84%|████████▍ | 419/499 [37:15:19<7:10:36, 322.95s/it] 84%|████████▍ | 420/499 [37:20:38<7:03:37, 321.74s/it] 84%|████████▍ | 421/499 [37:25:56<6:57:05, 320.83s/it] 85%|████████▍ | 422/499 [37:31:15<6:50:58, 320.24s/it] 85%|████████▍ | 423/499 [37:36:34<6:45:09, 319.86s/it] 85%|████████▍ | 424/499 [37:41:53<6:39:32, 319.63s/it] 85%|████████▌ | 425/499 [37:47:12<6:33:57, 319.43s/it] 85%|████████▌ | 426/499 [37:52:31<6:28:26, 319.26s/it] 86%|████████▌ | 427/499 [37:57:50<6:23:00, 319.17s/it] 86%|████████▌ | 428/499 [38:03:09<6:17:35, 319.09s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.025147527..0.96196496].
 86%|████████▌ | 429/499 [38:08:41<6:16:56, 323.09s/it] 86%|████████▌ | 430/499 [38:14:00<6:10:06, 321.83s/it] 86%|████████▋ | 431/499 [38:19:19<6:03:40, 320.89s/it] 87%|████████▋ | 432/499 [38:24:38<5:57:36, 320.24s/it] 87%|████████▋ | 433/499 [38:29:57<5:51:50, 319.85s/it] 87%|████████▋ | 434/499 [38:35:15<5:46:07, 319.49s/it] 87%|████████▋ | 435/499 [38:40:34<5:40:31, 319.24s/it] 87%|████████▋ | 436/499 [38:45:52<5:34:59, 319.03s/it] 88%|████████▊ | 437/499 [38:51:11<5:29:34, 318.94s/it] 88%|████████▊ | 438/499 [38:56:30<5:24:07, 318.82s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.020665223..0.9659127].
 88%|████████▊ | 439/499 [39:02:01<5:22:27, 322.46s/it] 88%|████████▊ | 440/499 [39:07:19<5:15:59, 321.34s/it] 88%|████████▊ | 441/499 [39:12:38<5:09:49, 320.50s/it] 89%|████████▊ | 442/499 [39:17:57<5:03:59, 320.00s/it] 89%|████████▉ | 443/499 [39:23:16<4:58:20, 319.65s/it] 89%|████████▉ | 444/499 [39:28:34<4:52:47, 319.42s/it] 89%|████████▉ | 445/499 [39:33:53<4:47:16, 319.20s/it] 89%|████████▉ | 446/499 [39:39:12<4:41:45, 318.98s/it] 90%|████████▉ | 447/499 [39:44:30<4:36:20, 318.86s/it] 90%|████████▉ | 448/499 [39:49:49<4:30:58, 318.79s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.028719801..0.9086336].
 90%|████████▉ | 449/499 [39:55:21<4:29:04, 322.89s/it] 90%|█████████ | 450/499 [40:00:40<4:22:39, 321.63s/it] 90%|█████████ | 451/499 [40:05:58<4:16:33, 320.70s/it] 91%|█████████ | 452/499 [40:11:17<4:10:41, 320.04s/it] 91%|█████████ | 453/499 [40:16:35<4:05:00, 319.58s/it] 91%|█████████ | 454/499 [40:21:54<3:59:27, 319.28s/it] 91%|█████████ | 455/499 [40:27:13<3:53:59, 319.08s/it] 91%|█████████▏| 456/499 [40:32:31<3:48:33, 318.92s/it] 92%|█████████▏| 457/499 [40:37:50<3:43:09, 318.79s/it] 92%|█████████▏| 458/499 [40:43:08<3:37:46, 318.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.022606205..0.9846664].
 92%|█████████▏| 459/499 [40:48:40<3:35:01, 322.54s/it] 92%|█████████▏| 460/499 [40:53:58<3:28:51, 321.32s/it] 92%|█████████▏| 461/499 [40:59:17<3:22:58, 320.48s/it] 93%|█████████▎| 462/499 [41:04:35<3:17:15, 319.87s/it] 93%|█████████▎| 463/499 [41:09:53<3:11:38, 319.41s/it] 93%|█████████▎| 464/499 [41:15:12<3:06:08, 319.10s/it] 93%|█████████▎| 465/499 [41:20:30<3:00:42, 318.89s/it] 93%|█████████▎| 466/499 [41:25:48<2:55:17, 318.71s/it] 94%|█████████▎| 467/499 [41:31:07<2:49:55, 318.62s/it] 94%|█████████▍| 468/499 [41:36:25<2:44:35, 318.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.038369868..0.9650865].
 94%|█████████▍| 469/499 [41:41:57<2:41:18, 322.61s/it] 94%|█████████▍| 470/499 [41:47:16<2:35:19, 321.37s/it] 94%|█████████▍| 471/499 [41:52:34<2:29:34, 320.50s/it] 95%|█████████▍| 472/499 [41:57:53<2:23:56, 319.87s/it] 95%|█████████▍| 473/499 [42:03:11<2:18:24, 319.41s/it] 95%|█████████▍| 474/499 [42:08:29<2:12:57, 319.09s/it] 95%|█████████▌| 475/499 [42:13:48<2:07:34, 318.95s/it] 95%|█████████▌| 476/499 [42:19:07<2:02:13, 318.84s/it] 96%|█████████▌| 477/499 [42:24:25<1:56:52, 318.76s/it] 96%|█████████▌| 478/499 [42:29:44<1:51:32, 318.69s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.020066312..0.9773976].
 96%|█████████▌| 479/499 [42:35:14<1:47:20, 322.03s/it] 96%|█████████▌| 480/499 [42:40:32<1:41:40, 321.07s/it] 96%|█████████▋| 481/499 [42:45:51<1:36:08, 320.45s/it] 97%|█████████▋| 482/499 [42:51:10<1:30:39, 319.97s/it] 97%|█████████▋| 483/499 [42:56:29<1:25:13, 319.60s/it] 97%|█████████▋| 484/499 [43:01:48<1:19:50, 319.35s/it] 97%|█████████▋| 485/499 [43:07:06<1:14:27, 319.13s/it] 97%|█████████▋| 486/499 [43:12:25<1:09:07, 319.01s/it] 98%|█████████▊| 487/499 [43:17:44<1:03:47, 318.98s/it] 98%|█████████▊| 488/499 [43:23:03<58:28, 318.97s/it]  Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.023688843..0.92455846].
 98%|█████████▊| 489/499 [43:28:36<53:50, 323.07s/it] 98%|█████████▊| 490/499 [43:33:54<48:15, 321.76s/it] 98%|█████████▊| 491/499 [43:39:13<42:46, 320.82s/it] 99%|█████████▊| 492/499 [43:44:32<37:21, 320.21s/it] 99%|█████████▉| 493/499 [43:49:51<31:58, 319.78s/it] 99%|█████████▉| 494/499 [43:55:09<26:37, 319.50s/it] 99%|█████████▉| 495/499 [44:00:28<21:17, 319.32s/it] 99%|█████████▉| 496/499 [44:05:48<15:57, 319.30s/it]100%|█████████▉| 497/499 [44:11:06<10:38, 319.16s/it]100%|█████████▉| 498/499 [44:16:25<05:19, 319.07s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.024502313..0.9760202].
100%|██████████| 499/499 [44:21:56<00:00, 322.54s/it]100%|██████████| 499/499 [44:21:56<00:00, 320.07s/it]
EPOCH [1/500]: Train Loss: 0.03861  FID: 0.00030
EPOCH [2/500]: Train Loss: 0.00899  FID: 0.00030
EPOCH [3/500]: Train Loss: 0.00626  FID: 0.00029
EPOCH [4/500]: Train Loss: 0.00547  FID: 0.00029
EPOCH [5/500]: Train Loss: 0.00503  FID: 0.00029
EPOCH [6/500]: Train Loss: 0.00478  FID: 0.00029
EPOCH [7/500]: Train Loss: 0.00467  FID: 0.00029
EPOCH [8/500]: Train Loss: 0.00446  FID: 0.00029
EPOCH [9/500]: Train Loss: 0.00432  FID: 0.00029
EPOCH [19/500]: Train Loss: 0.00382  FID: 0.00029
EPOCH [29/500]: Train Loss: 0.00367  FID: 0.00029
EPOCH [39/500]: Train Loss: 0.00361  FID: 0.00029
EPOCH [49/500]: Train Loss: 0.00350  FID: 0.00029
EPOCH [59/500]: Train Loss: 0.00342  FID: 0.00029
EPOCH [69/500]: Train Loss: 0.00336  FID: 0.00029
EPOCH [79/500]: Train Loss: 0.00327  FID: 0.00029
EPOCH [89/500]: Train Loss: 0.00314  FID: 0.00029
EPOCH [99/500]: Train Loss: 0.00300  FID: 0.00029
EPOCH [109/500]: Train Loss: 0.00284  FID: 0.00029
EPOCH [119/500]: Train Loss: 0.00272  FID: 0.00029
EPOCH [129/500]: Train Loss: 0.00260  FID: 0.00029
EPOCH [139/500]: Train Loss: 0.00246  FID: 0.00029
EPOCH [149/500]: Train Loss: 0.00235  FID: 0.00029
EPOCH [159/500]: Train Loss: 0.00223  FID: 0.00029
EPOCH [169/500]: Train Loss: 0.00212  FID: 0.00029
EPOCH [179/500]: Train Loss: 0.00203  FID: 0.00029
EPOCH [189/500]: Train Loss: 0.00194  FID: 0.00029
EPOCH [199/500]: Train Loss: 0.00188  FID: 0.00029
EPOCH [209/500]: Train Loss: 0.00181  FID: 0.00029
EPOCH [219/500]: Train Loss: 0.00174  FID: 0.00029
EPOCH [229/500]: Train Loss: 0.00168  FID: 0.00029
EPOCH [239/500]: Train Loss: 0.00163  FID: 0.00029
EPOCH [249/500]: Train Loss: 0.00157  FID: 0.00029
EPOCH [259/500]: Train Loss: 0.00153  FID: 0.00029
EPOCH [269/500]: Train Loss: 0.00148  FID: 0.00029
EPOCH [279/500]: Train Loss: 0.00145  FID: 0.00029
EPOCH [289/500]: Train Loss: 0.00141  FID: 0.00029
EPOCH [299/500]: Train Loss: 0.00137  FID: 0.00029
EPOCH [309/500]: Train Loss: 0.00135  FID: 0.00029
EPOCH [319/500]: Train Loss: 0.00131  FID: 0.00029
EPOCH [329/500]: Train Loss: 0.00129  FID: 0.00029
EPOCH [339/500]: Train Loss: 0.00126  FID: 0.00029
EPOCH [349/500]: Train Loss: 0.00123  FID: 0.00029
EPOCH [359/500]: Train Loss: 0.00121  FID: 0.00029
EPOCH [369/500]: Train Loss: 0.00118  FID: 0.00029
EPOCH [379/500]: Train Loss: 0.00117  FID: 0.00029
EPOCH [389/500]: Train Loss: 0.00115  FID: 0.00029
EPOCH [399/500]: Train Loss: 0.00113  FID: 0.00029
EPOCH [409/500]: Train Loss: 0.00112  FID: 0.00029
EPOCH [419/500]: Train Loss: 0.00110  FID: 0.00029
EPOCH [429/500]: Train Loss: 0.00108  FID: 0.00029
EPOCH [439/500]: Train Loss: 0.00108  FID: 0.00029
EPOCH [449/500]: Train Loss: 0.00106  FID: 0.00029
EPOCH [459/500]: Train Loss: 0.00103  FID: 0.00029
EPOCH [469/500]: Train Loss: 0.00103  FID: 0.00029
EPOCH [479/500]: Train Loss: 0.00102  FID: 0.00029
EPOCH [489/500]: Train Loss: 0.00100  FID: 0.00029
EPOCH [499/500]: Train Loss: 0.00099  FID: 0.00029

Saving Model At: /scratch/data/m22cs061/DDPM/save_model/mnist.pth
