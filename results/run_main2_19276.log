Mon Jul 22 22:22:33 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 555.42.02              Driver Version: 555.42.02      CUDA Version: 12.5     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:B7:00.0 Off |                    0 |
| N/A   32C    P0             57W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
With CIFAR10
Files already downloaded and verified
Files already downloaded and verified
  0%|          | 0/499 [00:00<?, ?it/s]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-2.8797715..2.2254174].
  0%|          | 1/499 [04:33<37:46:41, 273.10s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-1.3561629..1.9777329].
  0%|          | 2/499 [09:06<37:44:25, 273.37s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.9237711..1.1028336].
  1%|          | 3/499 [13:39<37:39:39, 273.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.74257314..0.9959607].
  1%|          | 4/499 [18:14<37:38:01, 273.70s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.6279682..1.0083494].
  1%|          | 5/499 [22:47<37:32:27, 273.58s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.5085719..0.70800424].
  1%|          | 6/499 [27:20<37:26:58, 273.47s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.56289405..0.8382759].
  1%|▏         | 7/499 [31:54<37:22:54, 273.52s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.32373106..0.75399244].
  2%|▏         | 8/499 [36:28<37:19:04, 273.61s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.43253633..0.8322435].
  2%|▏         | 9/499 [41:01<37:14:23, 273.60s/it]  2%|▏         | 10/499 [45:25<36:44:03, 270.44s/it]  2%|▏         | 11/499 [49:48<36:21:49, 268.26s/it]  2%|▏         | 12/499 [54:11<36:05:13, 266.76s/it]  3%|▎         | 13/499 [58:35<35:52:50, 265.78s/it]  3%|▎         | 14/499 [1:02:59<35:43:31, 265.18s/it]  3%|▎         | 15/499 [1:07:22<35:34:48, 264.65s/it]  3%|▎         | 16/499 [1:11:46<35:27:38, 264.30s/it]  3%|▎         | 17/499 [1:16:09<35:21:46, 264.12s/it]  4%|▎         | 18/499 [1:20:33<35:15:34, 263.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.24515884..0.83951956].
  4%|▍         | 19/499 [1:25:06<35:34:21, 266.80s/it]  4%|▍         | 20/499 [1:29:30<35:22:20, 265.85s/it]  4%|▍         | 21/499 [1:33:53<35:11:49, 265.08s/it]  4%|▍         | 22/499 [1:38:16<35:03:09, 264.55s/it]  5%|▍         | 23/499 [1:42:40<34:55:56, 264.19s/it]  5%|▍         | 24/499 [1:47:03<34:48:59, 263.87s/it]  5%|▌         | 25/499 [1:51:26<34:43:14, 263.70s/it]  5%|▌         | 26/499 [1:55:49<34:37:43, 263.56s/it]  5%|▌         | 27/499 [2:00:12<34:31:59, 263.39s/it]  6%|▌         | 28/499 [2:04:36<34:27:36, 263.39s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.20238608..0.77422374].
  6%|▌         | 29/499 [2:09:09<34:46:42, 266.39s/it]  6%|▌         | 30/499 [2:13:32<34:34:40, 265.42s/it]  6%|▌         | 31/499 [2:17:56<34:25:29, 264.81s/it]  6%|▋         | 32/499 [2:22:19<34:17:53, 264.40s/it]  7%|▋         | 33/499 [2:26:43<34:11:15, 264.11s/it]  7%|▋         | 34/499 [2:31:06<34:05:03, 263.88s/it]  7%|▋         | 35/499 [2:35:29<33:59:22, 263.71s/it]  7%|▋         | 36/499 [2:39:53<33:54:08, 263.60s/it]  7%|▋         | 37/499 [2:44:16<33:49:14, 263.54s/it]  8%|▊         | 38/499 [2:48:39<33:44:32, 263.50s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.18140939..0.7228498].
  8%|▊         | 39/499 [2:53:13<34:03:11, 266.50s/it]  8%|▊         | 40/499 [2:57:36<33:51:36, 265.57s/it]  8%|▊         | 41/499 [3:02:00<33:41:59, 264.89s/it]  8%|▊         | 42/499 [3:06:23<33:34:01, 264.42s/it]  9%|▊         | 43/499 [3:10:46<33:27:16, 264.11s/it]  9%|▉         | 44/499 [3:15:10<33:20:54, 263.86s/it]  9%|▉         | 45/499 [3:19:33<33:15:20, 263.70s/it]  9%|▉         | 46/499 [3:23:56<33:10:17, 263.62s/it]  9%|▉         | 47/499 [3:28:20<33:05:23, 263.55s/it] 10%|▉         | 48/499 [3:32:43<33:00:36, 263.49s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.1399397..0.77434576].
 10%|▉         | 49/499 [3:37:17<33:18:50, 266.51s/it] 10%|█         | 50/499 [3:41:40<33:06:49, 265.50s/it] 10%|█         | 51/499 [3:46:03<32:57:31, 264.85s/it] 10%|█         | 52/499 [3:50:27<32:49:45, 264.40s/it] 11%|█         | 53/499 [3:54:50<32:42:29, 264.01s/it] 11%|█         | 54/499 [3:59:13<32:36:39, 263.82s/it] 11%|█         | 55/499 [4:03:36<32:30:46, 263.62s/it] 11%|█         | 56/499 [4:07:59<32:25:34, 263.51s/it] 11%|█▏        | 57/499 [4:12:23<32:20:48, 263.46s/it] 12%|█▏        | 58/499 [4:16:46<32:15:37, 263.35s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.15446936..0.8132399].
 12%|█▏        | 59/499 [4:21:19<32:33:29, 266.38s/it] 12%|█▏        | 60/499 [4:25:43<32:22:20, 265.47s/it] 12%|█▏        | 61/499 [4:30:06<32:13:21, 264.84s/it] 12%|█▏        | 62/499 [4:34:29<32:05:33, 264.38s/it] 13%|█▎        | 63/499 [4:38:53<31:58:43, 264.04s/it] 13%|█▎        | 64/499 [4:43:16<31:52:32, 263.80s/it] 13%|█▎        | 65/499 [4:47:39<31:46:52, 263.62s/it] 13%|█▎        | 66/499 [4:52:02<31:41:24, 263.47s/it] 13%|█▎        | 67/499 [4:56:25<31:36:23, 263.39s/it] 14%|█▎        | 68/499 [5:00:49<31:31:46, 263.36s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.18954712..0.8603265].
 14%|█▍        | 69/499 [5:05:22<31:49:02, 266.38s/it] 14%|█▍        | 70/499 [5:09:45<31:37:55, 265.44s/it] 14%|█▍        | 71/499 [5:14:08<31:28:29, 264.74s/it] 14%|█▍        | 72/499 [5:18:32<31:20:59, 264.31s/it] 15%|█▍        | 73/499 [5:22:55<31:14:11, 263.97s/it] 15%|█▍        | 74/499 [5:27:18<31:07:36, 263.66s/it] 15%|█▌        | 75/499 [5:31:41<31:02:22, 263.54s/it] 15%|█▌        | 76/499 [5:36:04<30:56:57, 263.40s/it] 15%|█▌        | 77/499 [5:40:28<30:52:26, 263.38s/it] 16%|█▌        | 78/499 [5:44:51<30:47:25, 263.29s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.10279738..0.86683935].
 16%|█▌        | 79/499 [5:49:24<31:04:07, 266.30s/it] 16%|█▌        | 80/499 [5:53:47<30:53:30, 265.42s/it] 16%|█▌        | 81/499 [5:58:11<30:44:37, 264.78s/it] 16%|█▋        | 82/499 [6:02:34<30:36:51, 264.30s/it] 17%|█▋        | 83/499 [6:06:57<30:30:12, 263.97s/it] 17%|█▋        | 84/499 [6:11:20<30:24:14, 263.75s/it] 17%|█▋        | 85/499 [6:15:43<30:18:40, 263.58s/it] 17%|█▋        | 86/499 [6:20:07<30:13:24, 263.45s/it] 17%|█▋        | 87/499 [6:24:30<30:08:07, 263.32s/it] 18%|█▊        | 88/499 [6:28:53<30:03:29, 263.28s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.115102015..0.9538028].
 18%|█▊        | 89/499 [6:33:26<30:19:46, 266.31s/it] 18%|█▊        | 90/499 [6:37:49<30:08:27, 265.30s/it] 18%|█▊        | 91/499 [6:42:12<29:59:12, 264.59s/it] 18%|█▊        | 92/499 [6:46:35<29:51:26, 264.10s/it] 19%|█▊        | 93/499 [6:50:58<29:44:45, 263.76s/it] 19%|█▉        | 94/499 [6:55:21<29:38:57, 263.55s/it] 19%|█▉        | 95/499 [6:59:44<29:33:20, 263.37s/it] 19%|█▉        | 96/499 [7:04:07<29:28:12, 263.26s/it] 19%|█▉        | 97/499 [7:08:30<29:23:04, 263.15s/it] 20%|█▉        | 98/499 [7:12:53<29:18:20, 263.09s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.08555484..0.8133482].
 20%|█▉        | 99/499 [7:17:26<29:34:12, 266.13s/it] 20%|██        | 100/499 [7:21:49<29:23:49, 265.24s/it] 20%|██        | 101/499 [7:26:12<29:15:15, 264.61s/it] 20%|██        | 102/499 [7:30:35<29:07:59, 264.18s/it] 21%|██        | 103/499 [7:34:59<29:01:35, 263.88s/it] 21%|██        | 104/499 [7:39:22<28:55:41, 263.65s/it] 21%|██        | 105/499 [7:43:45<28:50:14, 263.49s/it] 21%|██        | 106/499 [7:48:08<28:45:03, 263.37s/it] 21%|██▏       | 107/499 [7:52:31<28:40:12, 263.30s/it] 22%|██▏       | 108/499 [7:56:54<28:35:21, 263.23s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.09296946..0.86373407].
 22%|██▏       | 109/499 [8:01:27<28:50:42, 266.26s/it] 22%|██▏       | 110/499 [8:05:51<28:40:08, 265.32s/it] 22%|██▏       | 111/499 [8:10:14<28:31:17, 264.63s/it] 22%|██▏       | 112/499 [8:14:37<28:23:47, 264.15s/it] 23%|██▎       | 113/499 [8:19:00<28:17:05, 263.80s/it] 23%|██▎       | 114/499 [8:23:23<28:11:03, 263.54s/it] 23%|██▎       | 115/499 [8:27:46<28:05:41, 263.39s/it] 23%|██▎       | 116/499 [8:32:09<28:00:45, 263.30s/it] 23%|██▎       | 117/499 [8:36:32<27:56:00, 263.25s/it] 24%|██▎       | 118/499 [8:40:55<27:51:24, 263.21s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.09999994..0.9768339].
 24%|██▍       | 119/499 [8:45:28<28:06:28, 266.28s/it] 24%|██▍       | 120/499 [8:49:52<27:56:03, 265.34s/it] 24%|██▍       | 121/499 [8:54:15<27:47:17, 264.65s/it] 24%|██▍       | 122/499 [8:58:38<27:39:59, 264.19s/it] 25%|██▍       | 123/499 [9:03:01<27:33:39, 263.88s/it] 25%|██▍       | 124/499 [9:07:24<27:27:59, 263.68s/it] 25%|██▌       | 125/499 [9:11:47<27:22:36, 263.52s/it] 25%|██▌       | 126/499 [9:16:10<27:17:33, 263.42s/it] 25%|██▌       | 127/499 [9:20:34<27:12:46, 263.35s/it] 26%|██▌       | 128/499 [9:24:57<27:07:55, 263.28s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.098757505..0.887047].
 26%|██▌       | 129/499 [9:29:30<27:22:20, 266.32s/it] 26%|██▌       | 130/499 [9:33:53<27:11:30, 265.28s/it] 26%|██▋       | 131/499 [9:38:16<27:02:47, 264.59s/it] 26%|██▋       | 132/499 [9:42:39<26:55:25, 264.10s/it] 27%|██▋       | 133/499 [9:47:02<26:49:00, 263.77s/it] 27%|██▋       | 134/499 [9:51:25<26:43:01, 263.51s/it] 27%|██▋       | 135/499 [9:55:48<26:37:35, 263.34s/it] 27%|██▋       | 136/499 [10:00:11<26:32:25, 263.21s/it] 27%|██▋       | 137/499 [10:04:33<26:27:18, 263.09s/it] 28%|██▊       | 138/499 [10:08:56<26:22:18, 262.99s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.115856744..0.8926623].
 28%|██▊       | 139/499 [10:13:29<26:36:01, 266.00s/it] 28%|██▊       | 140/499 [10:17:52<26:26:32, 265.16s/it] 28%|██▊       | 141/499 [10:22:16<26:18:45, 264.60s/it] 28%|██▊       | 142/499 [10:26:39<26:11:58, 264.20s/it] 29%|██▊       | 143/499 [10:31:02<26:05:58, 263.93s/it] 29%|██▉       | 144/499 [10:35:26<26:00:26, 263.74s/it] 29%|██▉       | 145/499 [10:39:49<25:55:12, 263.59s/it] 29%|██▉       | 146/499 [10:44:12<25:50:12, 263.49s/it] 29%|██▉       | 147/499 [10:48:35<25:45:09, 263.38s/it] 30%|██▉       | 148/499 [10:52:58<25:40:31, 263.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.11600677..0.82129335].
 30%|██▉       | 149/499 [10:57:32<25:53:35, 266.33s/it] 30%|███       | 150/499 [11:01:55<25:43:08, 265.30s/it] 30%|███       | 151/499 [11:06:18<25:35:03, 264.67s/it] 30%|███       | 152/499 [11:10:41<25:28:33, 264.30s/it] 31%|███       | 153/499 [11:15:05<25:23:11, 264.14s/it] 31%|███       | 154/499 [11:19:29<25:18:40, 264.12s/it] 31%|███       | 155/499 [11:23:53<25:14:11, 264.10s/it] 31%|███▏      | 156/499 [11:28:17<25:09:23, 264.03s/it] 31%|███▏      | 157/499 [11:32:41<25:05:05, 264.05s/it] 32%|███▏      | 158/499 [11:37:05<25:00:47, 264.07s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.098450825..0.8379501].
 32%|███▏      | 159/499 [11:41:39<25:13:05, 267.02s/it] 32%|███▏      | 160/499 [11:46:03<25:02:40, 265.96s/it] 32%|███▏      | 161/499 [11:50:26<24:54:05, 265.22s/it] 32%|███▏      | 162/499 [11:54:50<24:46:48, 264.71s/it] 33%|███▎      | 163/499 [11:59:13<24:40:23, 264.36s/it] 33%|███▎      | 164/499 [12:03:37<24:34:33, 264.10s/it] 33%|███▎      | 165/499 [12:08:00<24:29:08, 263.92s/it] 33%|███▎      | 166/499 [12:12:24<24:24:01, 263.79s/it] 33%|███▎      | 167/499 [12:16:47<24:19:02, 263.68s/it] 34%|███▎      | 168/499 [12:21:11<24:14:11, 263.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.07512952..0.91302276].
 34%|███▍      | 169/499 [12:25:44<24:26:19, 266.61s/it] 34%|███▍      | 170/499 [12:30:08<24:16:50, 265.68s/it] 34%|███▍      | 171/499 [12:34:31<24:08:53, 265.04s/it] 34%|███▍      | 172/499 [12:38:55<24:01:57, 264.58s/it] 35%|███▍      | 173/499 [12:43:18<23:55:46, 264.25s/it] 35%|███▍      | 174/499 [12:47:42<23:50:13, 264.04s/it] 35%|███▌      | 175/499 [12:52:05<23:44:57, 263.88s/it] 35%|███▌      | 176/499 [12:56:29<23:39:50, 263.75s/it] 35%|███▌      | 177/499 [13:00:52<23:34:52, 263.64s/it] 36%|███▌      | 178/499 [13:05:16<23:30:15, 263.60s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.096942216..0.86999357].
 36%|███▌      | 179/499 [13:09:49<23:42:07, 266.65s/it] 36%|███▌      | 180/499 [13:14:13<23:32:44, 265.72s/it] 36%|███▋      | 181/499 [13:18:36<23:24:46, 265.05s/it] 36%|███▋      | 182/499 [13:23:00<23:17:55, 264.59s/it] 37%|███▋      | 183/499 [13:27:23<23:11:48, 264.27s/it] 37%|███▋      | 184/499 [13:31:47<23:06:15, 264.05s/it] 37%|███▋      | 185/499 [13:36:11<23:01:15, 263.93s/it] 37%|███▋      | 186/499 [13:40:35<22:57:03, 263.97s/it] 37%|███▋      | 187/499 [13:44:59<22:53:02, 264.05s/it] 38%|███▊      | 188/499 [13:49:23<22:49:05, 264.13s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.065058246..0.8190648].
 38%|███▊      | 189/499 [13:53:58<23:00:55, 267.28s/it] 38%|███▊      | 190/499 [13:58:23<22:53:01, 266.61s/it] 38%|███▊      | 191/499 [14:02:48<22:46:17, 266.16s/it] 38%|███▊      | 192/499 [14:07:13<22:40:16, 265.85s/it] 39%|███▊      | 193/499 [14:11:39<22:35:23, 265.76s/it] 39%|███▉      | 194/499 [14:16:04<22:30:36, 265.69s/it] 39%|███▉      | 195/499 [14:20:29<22:25:28, 265.56s/it] 39%|███▉      | 196/499 [14:24:55<22:20:18, 265.41s/it] 39%|███▉      | 197/499 [14:29:20<22:15:28, 265.32s/it] 40%|███▉      | 198/499 [14:33:45<22:10:45, 265.27s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.07789134..0.7052262].
 40%|███▉      | 199/499 [14:38:20<22:21:26, 268.29s/it] 40%|████      | 200/499 [14:42:45<22:12:09, 267.32s/it] 40%|████      | 201/499 [14:47:10<22:04:05, 266.60s/it] 40%|████      | 202/499 [14:51:35<21:57:17, 266.12s/it] 41%|████      | 203/499 [14:56:00<21:51:12, 265.78s/it] 41%|████      | 204/499 [15:00:25<21:45:19, 265.49s/it] 41%|████      | 205/499 [15:04:50<21:40:12, 265.35s/it] 41%|████▏     | 206/499 [15:09:15<21:35:25, 265.27s/it] 41%|████▏     | 207/499 [15:13:40<21:30:37, 265.20s/it] 42%|████▏     | 208/499 [15:18:05<21:25:44, 265.10s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.087625585..0.68727326].
 42%|████▏     | 209/499 [15:22:40<21:36:03, 268.15s/it] 42%|████▏     | 210/499 [15:27:05<21:27:06, 267.22s/it] 42%|████▏     | 211/499 [15:31:30<21:19:37, 266.59s/it] 42%|████▏     | 212/499 [15:35:55<21:12:58, 266.13s/it] 43%|████▎     | 213/499 [15:40:20<21:06:56, 265.79s/it] 43%|████▎     | 214/499 [15:44:46<21:01:34, 265.59s/it] 43%|████▎     | 215/499 [15:49:11<20:56:12, 265.40s/it] 43%|████▎     | 216/499 [15:53:35<20:51:02, 265.24s/it] 43%|████▎     | 217/499 [15:58:00<20:46:19, 265.18s/it] 44%|████▎     | 218/499 [16:02:26<20:41:50, 265.16s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.076920964..0.63182276].
 44%|████▍     | 219/499 [16:07:01<20:51:19, 268.14s/it] 44%|████▍     | 220/499 [16:11:26<20:42:30, 267.21s/it] 44%|████▍     | 221/499 [16:15:51<20:34:57, 266.54s/it] 44%|████▍     | 222/499 [16:20:15<20:28:09, 266.03s/it] 45%|████▍     | 223/499 [16:24:40<20:22:11, 265.70s/it] 45%|████▍     | 224/499 [16:29:05<20:16:32, 265.43s/it] 45%|████▌     | 225/499 [16:33:30<20:11:28, 265.29s/it] 45%|████▌     | 226/499 [16:37:55<20:06:43, 265.21s/it] 45%|████▌     | 227/499 [16:42:20<20:01:43, 265.09s/it] 46%|████▌     | 228/499 [16:46:45<19:57:17, 265.08s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.098556325..0.7703173].
 46%|████▌     | 229/499 [16:51:21<20:06:53, 268.20s/it] 46%|████▌     | 230/499 [16:55:45<19:57:49, 267.17s/it] 46%|████▋     | 231/499 [17:00:10<19:50:21, 266.50s/it] 46%|████▋     | 232/499 [17:04:35<19:44:01, 266.07s/it] 47%|████▋     | 233/499 [17:09:00<19:38:23, 265.80s/it] 47%|████▋     | 234/499 [17:13:26<19:34:08, 265.84s/it] 47%|████▋     | 235/499 [17:17:52<19:29:49, 265.87s/it] 47%|████▋     | 236/499 [17:22:18<19:25:09, 265.82s/it] 47%|████▋     | 237/499 [17:26:43<19:19:39, 265.57s/it] 48%|████▊     | 238/499 [17:31:07<19:13:40, 265.21s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.06630742..0.9018477].
 48%|████▊     | 239/499 [17:35:42<19:20:51, 267.89s/it] 48%|████▊     | 240/499 [17:40:06<19:11:20, 266.72s/it] 48%|████▊     | 241/499 [17:44:29<19:03:13, 265.87s/it] 48%|████▊     | 242/499 [17:48:54<18:57:15, 265.51s/it] 49%|████▊     | 243/499 [17:53:19<18:52:00, 265.31s/it] 49%|████▉     | 244/499 [17:57:44<18:47:08, 265.21s/it] 49%|████▉     | 245/499 [18:02:09<18:42:55, 265.26s/it] 49%|████▉     | 246/499 [18:06:34<18:37:59, 265.14s/it] 49%|████▉     | 247/499 [18:10:58<18:32:16, 264.83s/it] 50%|████▉     | 248/499 [18:15:23<18:27:15, 264.68s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.08177693..0.8790901].
 50%|████▉     | 249/499 [18:19:57<18:35:04, 267.62s/it] 50%|█████     | 250/499 [18:24:22<18:27:13, 266.80s/it] 50%|█████     | 251/499 [18:28:47<18:20:46, 266.32s/it] 51%|█████     | 252/499 [18:33:12<18:14:43, 265.93s/it] 51%|█████     | 253/499 [18:37:37<18:09:26, 265.72s/it] 51%|█████     | 254/499 [18:42:03<18:04:18, 265.54s/it] 51%|█████     | 255/499 [18:46:27<17:58:27, 265.20s/it] 51%|█████▏    | 256/499 [18:50:52<17:53:52, 265.16s/it] 52%|█████▏    | 257/499 [18:55:17<17:49:07, 265.07s/it] 52%|█████▏    | 258/499 [18:59:42<17:44:31, 265.03s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.056072112..0.6540167].
 52%|█████▏    | 259/499 [19:04:17<17:52:40, 268.17s/it] 52%|█████▏    | 260/499 [19:08:42<17:44:00, 267.11s/it] 52%|█████▏    | 261/499 [19:13:07<17:36:31, 266.35s/it] 53%|█████▎    | 262/499 [19:17:31<17:29:29, 265.69s/it] 53%|█████▎    | 263/499 [19:21:55<17:23:13, 265.23s/it] 53%|█████▎    | 264/499 [19:26:19<17:17:21, 264.86s/it] 53%|█████▎    | 265/499 [19:30:43<17:12:07, 264.65s/it] 53%|█████▎    | 266/499 [19:35:07<17:07:20, 264.55s/it] 54%|█████▎    | 267/499 [19:39:32<17:02:39, 264.48s/it] 54%|█████▎    | 268/499 [19:43:56<16:57:52, 264.38s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.07243986..0.68841815].
 54%|█████▍    | 269/499 [19:48:30<17:05:03, 267.41s/it] 54%|█████▍    | 270/499 [19:52:54<16:56:53, 266.43s/it] 54%|█████▍    | 271/499 [19:57:18<16:49:48, 265.74s/it] 55%|█████▍    | 272/499 [20:01:43<16:43:30, 265.24s/it] 55%|█████▍    | 273/499 [20:06:07<16:37:50, 264.91s/it] 55%|█████▍    | 274/499 [20:10:31<16:32:35, 264.69s/it] 55%|█████▌    | 275/499 [20:14:55<16:27:36, 264.54s/it] 55%|█████▌    | 276/499 [20:19:19<16:22:45, 264.42s/it] 56%|█████▌    | 277/499 [20:23:43<16:18:02, 264.33s/it] 56%|█████▌    | 278/499 [20:28:07<16:13:22, 264.27s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.061988164..0.78011495].
 56%|█████▌    | 279/499 [20:32:42<16:20:12, 267.33s/it] 56%|█████▌    | 280/499 [20:37:06<16:12:25, 266.42s/it] 56%|█████▋    | 281/499 [20:41:30<16:05:13, 265.66s/it] 57%|█████▋    | 282/499 [20:45:54<15:58:54, 265.13s/it] 57%|█████▋    | 283/499 [20:50:18<15:53:11, 264.78s/it] 57%|█████▋    | 284/499 [20:54:42<15:48:03, 264.58s/it] 57%|█████▋    | 285/499 [20:59:06<15:43:23, 264.50s/it] 57%|█████▋    | 286/499 [21:03:30<15:38:29, 264.36s/it] 58%|█████▊    | 287/499 [21:07:55<15:34:07, 264.37s/it] 58%|█████▊    | 288/499 [21:12:19<15:29:03, 264.19s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.052594896..0.9405455].
 58%|█████▊    | 289/499 [21:16:52<15:34:50, 267.10s/it] 58%|█████▊    | 290/499 [21:21:16<15:27:04, 266.15s/it] 58%|█████▊    | 291/499 [21:25:41<15:20:41, 265.58s/it] 59%|█████▊    | 292/499 [21:30:05<15:14:31, 265.08s/it] 59%|█████▊    | 293/499 [21:34:29<15:09:27, 264.89s/it] 59%|█████▉    | 294/499 [21:38:53<15:04:21, 264.69s/it] 59%|█████▉    | 295/499 [21:43:17<14:59:24, 264.53s/it] 59%|█████▉    | 296/499 [21:47:41<14:54:20, 264.34s/it] 60%|█████▉    | 297/499 [21:52:05<14:49:43, 264.28s/it] 60%|█████▉    | 298/499 [21:56:29<14:44:58, 264.17s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.058181245..0.6700097].
 60%|█████▉    | 299/499 [22:01:04<14:50:33, 267.17s/it] 60%|██████    | 300/499 [22:05:28<14:43:01, 266.24s/it] 60%|██████    | 301/499 [22:09:52<14:36:48, 265.70s/it] 61%|██████    | 302/499 [22:14:16<14:30:42, 265.19s/it] 61%|██████    | 303/499 [22:18:40<14:25:12, 264.86s/it] 61%|██████    | 304/499 [22:23:04<14:19:40, 264.51s/it] 61%|██████    | 305/499 [22:27:27<14:14:24, 264.25s/it] 61%|██████▏   | 306/499 [22:31:51<14:09:24, 264.06s/it] 62%|██████▏   | 307/499 [22:36:15<14:04:36, 263.94s/it] 62%|██████▏   | 308/499 [22:40:38<13:59:53, 263.84s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.062649615..0.6117051].
 62%|██████▏   | 309/499 [22:45:12<14:04:56, 266.82s/it] 62%|██████▏   | 310/499 [22:49:36<13:57:35, 265.90s/it] 62%|██████▏   | 311/499 [22:54:00<13:51:05, 265.24s/it] 63%|██████▎   | 312/499 [22:58:23<13:45:15, 264.79s/it] 63%|██████▎   | 313/499 [23:02:47<13:39:50, 264.46s/it] 63%|██████▎   | 314/499 [23:07:11<13:34:37, 264.20s/it] 63%|██████▎   | 315/499 [23:11:35<13:30:01, 264.14s/it] 63%|██████▎   | 316/499 [23:15:59<13:25:33, 264.12s/it] 64%|██████▎   | 317/499 [23:20:23<13:20:54, 264.03s/it] 64%|██████▎   | 318/499 [23:24:46<13:16:19, 263.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.07098994..0.70563257].
 64%|██████▍   | 319/499 [23:29:20<13:20:58, 266.99s/it] 64%|██████▍   | 320/499 [23:33:44<13:13:39, 266.03s/it] 64%|██████▍   | 321/499 [23:38:08<13:07:19, 265.39s/it] 65%|██████▍   | 322/499 [23:42:32<13:01:25, 264.89s/it] 65%|██████▍   | 323/499 [23:46:56<12:56:18, 264.65s/it] 65%|██████▍   | 324/499 [23:51:20<12:51:06, 264.38s/it] 65%|██████▌   | 325/499 [23:55:44<12:46:15, 264.23s/it] 65%|██████▌   | 326/499 [24:00:07<12:41:26, 264.09s/it] 66%|██████▌   | 327/499 [24:04:31<12:36:42, 263.97s/it] 66%|██████▌   | 328/499 [24:08:55<12:32:15, 263.95s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.07205705..0.699596].
 66%|██████▌   | 329/499 [24:13:29<12:36:25, 266.98s/it] 66%|██████▌   | 330/499 [24:17:53<12:29:20, 266.04s/it] 66%|██████▋   | 331/499 [24:22:16<12:22:59, 265.35s/it] 67%|██████▋   | 332/499 [24:26:40<12:17:11, 264.86s/it] 67%|██████▋   | 333/499 [24:31:04<12:11:51, 264.52s/it] 67%|██████▋   | 334/499 [24:35:28<12:06:48, 264.29s/it] 67%|██████▋   | 335/499 [24:39:51<12:01:52, 264.10s/it] 67%|██████▋   | 336/499 [24:44:15<11:57:15, 264.02s/it] 68%|██████▊   | 337/499 [24:48:39<11:52:39, 263.95s/it] 68%|██████▊   | 338/499 [24:53:03<11:48:07, 263.90s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.051311057..0.5112287].
 68%|██████▊   | 339/499 [24:57:37<11:51:53, 266.96s/it] 68%|██████▊   | 340/499 [25:02:01<11:44:49, 265.97s/it] 68%|██████▊   | 341/499 [25:06:24<11:38:34, 265.28s/it] 69%|██████▊   | 342/499 [25:10:48<11:32:54, 264.80s/it] 69%|██████▊   | 343/499 [25:15:11<11:27:30, 264.43s/it] 69%|██████▉   | 344/499 [25:19:35<11:22:28, 264.19s/it] 69%|██████▉   | 345/499 [25:23:59<11:17:40, 264.03s/it] 69%|██████▉   | 346/499 [25:28:22<11:12:56, 263.90s/it] 70%|██████▉   | 347/499 [25:32:46<11:08:18, 263.81s/it] 70%|██████▉   | 348/499 [25:37:10<11:03:47, 263.76s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.067573234..0.76488006].
 70%|██████▉   | 349/499 [25:41:43<11:06:57, 266.78s/it] 70%|███████   | 350/499 [25:46:07<11:00:18, 265.90s/it] 70%|███████   | 351/499 [25:50:31<10:54:18, 265.26s/it] 71%|███████   | 352/499 [25:54:55<10:48:58, 264.89s/it] 71%|███████   | 353/499 [25:59:19<10:43:54, 264.62s/it] 71%|███████   | 354/499 [26:03:43<10:38:54, 264.37s/it] 71%|███████   | 355/499 [26:08:06<10:34:00, 264.17s/it] 71%|███████▏  | 356/499 [26:12:30<10:29:14, 264.02s/it] 72%|███████▏  | 357/499 [26:16:54<10:24:37, 263.93s/it] 72%|███████▏  | 358/499 [26:21:18<10:20:19, 263.97s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.057884447..0.73195493].
 72%|███████▏  | 359/499 [26:25:52<10:23:18, 267.13s/it] 72%|███████▏  | 360/499 [26:30:17<10:16:50, 266.26s/it] 72%|███████▏  | 361/499 [26:34:41<10:11:01, 265.66s/it] 73%|███████▎  | 362/499 [26:39:05<10:05:34, 265.22s/it] 73%|███████▎  | 363/499 [26:43:29<10:00:18, 264.84s/it] 73%|███████▎  | 364/499 [26:47:53<9:55:12, 264.54s/it]  73%|███████▎  | 365/499 [26:52:17<9:50:22, 264.35s/it] 73%|███████▎  | 366/499 [26:56:41<9:45:52, 264.31s/it] 74%|███████▎  | 367/499 [27:01:05<9:41:27, 264.30s/it] 74%|███████▎  | 368/499 [27:05:30<9:37:00, 264.28s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.05567593..0.577553].
 74%|███████▍  | 369/499 [27:10:04<9:39:01, 267.24s/it] 74%|███████▍  | 370/499 [27:14:28<9:32:35, 266.32s/it] 74%|███████▍  | 371/499 [27:18:52<9:26:41, 265.64s/it] 75%|███████▍  | 372/499 [27:23:15<9:20:56, 265.01s/it] 75%|███████▍  | 373/499 [27:27:40<9:15:55, 264.73s/it] 75%|███████▍  | 374/499 [27:32:03<9:11:00, 264.48s/it] 75%|███████▌  | 375/499 [27:36:27<9:06:13, 264.30s/it] 75%|███████▌  | 376/499 [27:40:52<9:01:50, 264.31s/it] 76%|███████▌  | 377/499 [27:45:16<8:57:29, 264.34s/it] 76%|███████▌  | 378/499 [27:49:40<8:52:59, 264.29s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.07019119..0.73548263].
 76%|███████▌  | 379/499 [27:54:15<8:54:44, 267.37s/it] 76%|███████▌  | 380/499 [27:58:39<8:48:19, 266.38s/it] 76%|███████▋  | 381/499 [28:03:03<8:42:31, 265.69s/it] 77%|███████▋  | 382/499 [28:07:27<8:37:08, 265.20s/it] 77%|███████▋  | 383/499 [28:11:51<8:32:09, 264.91s/it] 77%|███████▋  | 384/499 [28:16:16<8:27:22, 264.72s/it] 77%|███████▋  | 385/499 [28:20:40<8:22:43, 264.59s/it] 77%|███████▋  | 386/499 [28:25:04<8:18:08, 264.50s/it] 78%|███████▊  | 387/499 [28:29:28<8:13:33, 264.41s/it] 78%|███████▊  | 388/499 [28:33:52<8:09:01, 264.34s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.06994316..0.66092354].
 78%|███████▊  | 389/499 [28:38:27<8:10:09, 267.36s/it] 78%|███████▊  | 390/499 [28:42:51<8:03:57, 266.40s/it] 78%|███████▊  | 391/499 [28:47:15<7:58:22, 265.76s/it] 79%|███████▊  | 392/499 [28:51:40<7:53:07, 265.30s/it] 79%|███████▉  | 393/499 [28:56:04<7:48:11, 265.01s/it] 79%|███████▉  | 394/499 [29:00:28<7:43:19, 264.76s/it] 79%|███████▉  | 395/499 [29:04:52<7:38:34, 264.56s/it] 79%|███████▉  | 396/499 [29:09:16<7:33:56, 264.43s/it] 80%|███████▉  | 397/499 [29:13:40<7:29:22, 264.34s/it] 80%|███████▉  | 398/499 [29:18:05<7:24:55, 264.31s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.0507868..0.5499601].
 80%|███████▉  | 399/499 [29:22:39<7:25:33, 267.34s/it] 80%|████████  | 400/499 [29:27:03<7:19:37, 266.44s/it] 80%|████████  | 401/499 [29:31:27<7:14:02, 265.74s/it] 81%|████████  | 402/499 [29:35:52<7:08:49, 265.25s/it] 81%|████████  | 403/499 [29:40:16<7:03:50, 264.91s/it] 81%|████████  | 404/499 [29:44:40<6:59:02, 264.66s/it] 81%|████████  | 405/499 [29:49:04<6:54:21, 264.49s/it] 81%|████████▏ | 406/499 [29:53:28<6:49:48, 264.39s/it] 82%|████████▏ | 407/499 [29:57:52<6:45:17, 264.32s/it] 82%|████████▏ | 408/499 [30:02:16<6:40:47, 264.26s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.06066734..0.6752273].
 82%|████████▏ | 409/499 [30:06:51<6:40:55, 267.28s/it] 82%|████████▏ | 410/499 [30:11:14<6:34:54, 266.24s/it] 82%|████████▏ | 411/499 [30:15:39<6:29:35, 265.63s/it] 83%|████████▎ | 412/499 [30:20:03<6:24:29, 265.17s/it] 83%|████████▎ | 413/499 [30:24:27<6:19:36, 264.84s/it] 83%|████████▎ | 414/499 [30:28:51<6:14:57, 264.68s/it] 83%|████████▎ | 415/499 [30:33:15<6:10:20, 264.53s/it] 83%|████████▎ | 416/499 [30:37:39<6:05:38, 264.31s/it] 84%|████████▎ | 417/499 [30:42:03<6:01:12, 264.30s/it] 84%|████████▍ | 418/499 [30:46:28<5:56:45, 264.26s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.08975652..0.44900167].
 84%|████████▍ | 419/499 [30:51:02<5:56:21, 267.27s/it] 84%|████████▍ | 420/499 [30:55:26<5:50:42, 266.36s/it] 84%|████████▍ | 421/499 [30:59:50<5:45:24, 265.70s/it] 85%|████████▍ | 422/499 [31:04:14<5:40:13, 265.11s/it] 85%|████████▍ | 423/499 [31:08:38<5:35:31, 264.88s/it] 85%|████████▍ | 424/499 [31:13:03<5:30:50, 264.68s/it] 85%|████████▌ | 425/499 [31:17:26<5:26:08, 264.43s/it] 85%|████████▌ | 426/499 [31:21:50<5:21:33, 264.30s/it] 86%|████████▌ | 427/499 [31:26:15<5:17:07, 264.27s/it] 86%|████████▌ | 428/499 [31:30:38<5:12:35, 264.17s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.058137983..0.6735345].
 86%|████████▌ | 429/499 [31:35:13<5:11:46, 267.23s/it] 86%|████████▌ | 430/499 [31:39:37<5:06:17, 266.34s/it] 86%|████████▋ | 431/499 [31:44:01<5:01:01, 265.60s/it] 87%|████████▋ | 432/499 [31:48:25<4:56:06, 265.18s/it] 87%|████████▋ | 433/499 [31:52:50<4:51:26, 264.95s/it] 87%|████████▋ | 434/499 [31:57:14<4:46:45, 264.70s/it] 87%|████████▋ | 435/499 [32:01:38<4:42:06, 264.48s/it] 87%|████████▋ | 436/499 [32:06:02<4:37:34, 264.36s/it] 88%|████████▊ | 437/499 [32:10:26<4:33:09, 264.35s/it] 88%|████████▊ | 438/499 [32:14:50<4:28:39, 264.25s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.047087736..0.67254156].
 88%|████████▊ | 439/499 [32:19:24<4:27:14, 267.25s/it] 88%|████████▊ | 440/499 [32:23:49<4:21:53, 266.33s/it] 88%|████████▊ | 441/499 [32:28:13<4:16:52, 265.74s/it] 89%|████████▊ | 442/499 [32:32:37<4:11:59, 265.25s/it] 89%|████████▉ | 443/499 [32:37:01<4:07:12, 264.87s/it] 89%|████████▉ | 444/499 [32:41:25<4:02:36, 264.67s/it] 89%|████████▉ | 445/499 [32:45:49<3:57:58, 264.41s/it] 89%|████████▉ | 446/499 [32:50:13<3:53:25, 264.26s/it] 90%|████████▉ | 447/499 [32:54:37<3:48:57, 264.18s/it] 90%|████████▉ | 448/499 [32:59:01<3:44:27, 264.07s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.06371814..0.50367093].
 90%|████████▉ | 449/499 [33:03:35<3:42:31, 267.02s/it] 90%|█████████ | 450/499 [33:07:59<3:37:21, 266.16s/it] 90%|█████████ | 451/499 [33:12:23<3:32:25, 265.54s/it] 91%|█████████ | 452/499 [33:16:47<3:27:37, 265.06s/it] 91%|█████████ | 453/499 [33:21:11<3:23:01, 264.81s/it] 91%|█████████ | 454/499 [33:25:35<3:18:29, 264.65s/it] 91%|█████████ | 455/499 [33:30:00<3:13:58, 264.52s/it] 91%|█████████▏| 456/499 [33:34:24<3:09:27, 264.36s/it] 92%|█████████▏| 457/499 [33:38:48<3:05:00, 264.29s/it] 92%|█████████▏| 458/499 [33:43:12<3:00:35, 264.29s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.056023136..0.48779875].
 92%|█████████▏| 459/499 [33:47:46<2:58:12, 267.31s/it] 92%|█████████▏| 460/499 [33:52:10<2:53:05, 266.30s/it] 92%|█████████▏| 461/499 [33:56:34<2:48:13, 265.61s/it] 93%|█████████▎| 462/499 [34:00:58<2:43:30, 265.15s/it] 93%|█████████▎| 463/499 [34:05:22<2:38:51, 264.78s/it] 93%|█████████▎| 464/499 [34:09:46<2:34:16, 264.48s/it] 93%|█████████▎| 465/499 [34:14:10<2:29:48, 264.38s/it] 93%|█████████▎| 466/499 [34:18:34<2:25:19, 264.22s/it] 94%|█████████▎| 467/499 [34:22:58<2:20:52, 264.13s/it] 94%|█████████▍| 468/499 [34:27:22<2:16:27, 264.12s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.05391958..0.648833].
 94%|█████████▍| 469/499 [34:31:56<2:13:35, 267.18s/it] 94%|█████████▍| 470/499 [34:36:21<2:08:42, 266.29s/it] 94%|█████████▍| 471/499 [34:40:45<2:03:58, 265.67s/it] 95%|█████████▍| 472/499 [34:45:09<1:59:22, 265.29s/it] 95%|█████████▍| 473/499 [34:49:34<1:54:50, 265.02s/it] 95%|█████████▍| 474/499 [34:53:58<1:50:19, 264.77s/it] 95%|█████████▌| 475/499 [34:58:22<1:45:51, 264.63s/it] 95%|█████████▌| 476/499 [35:02:46<1:41:23, 264.48s/it] 96%|█████████▌| 477/499 [35:07:10<1:36:56, 264.37s/it] 96%|█████████▌| 478/499 [35:11:34<1:32:30, 264.30s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.06663719..0.60837674].
 96%|█████████▌| 479/499 [35:16:09<1:29:07, 267.37s/it] 96%|█████████▌| 480/499 [35:20:33<1:24:20, 266.34s/it] 96%|█████████▋| 481/499 [35:24:57<1:19:41, 265.62s/it] 97%|█████████▋| 482/499 [35:29:21<1:15:06, 265.12s/it] 97%|█████████▋| 483/499 [35:33:45<1:10:36, 264.81s/it] 97%|█████████▋| 484/499 [35:38:09<1:06:08, 264.55s/it] 97%|█████████▋| 485/499 [35:42:33<1:01:41, 264.37s/it] 97%|█████████▋| 486/499 [35:46:57<57:15, 264.24s/it]   98%|█████████▊| 487/499 [35:51:21<52:49, 264.15s/it] 98%|█████████▊| 488/499 [35:55:44<48:24, 264.06s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.05219597..0.5712807].
 98%|█████████▊| 489/499 [36:00:19<44:31, 267.17s/it] 98%|█████████▊| 490/499 [36:04:43<39:56, 266.26s/it] 98%|█████████▊| 491/499 [36:09:07<35:24, 265.62s/it] 99%|█████████▊| 492/499 [36:13:31<30:56, 265.18s/it] 99%|█████████▉| 493/499 [36:17:56<26:29, 264.89s/it] 99%|█████████▉| 494/499 [36:22:20<22:03, 264.72s/it] 99%|█████████▉| 495/499 [36:26:44<17:38, 264.55s/it] 99%|█████████▉| 496/499 [36:31:08<13:13, 264.45s/it]100%|█████████▉| 497/499 [36:35:32<08:48, 264.39s/it]100%|█████████▉| 498/499 [36:39:57<04:24, 264.32s/it]Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers). Got range [-0.050546292..0.66878694].
100%|██████████| 499/499 [36:44:31<00:00, 267.38s/it]100%|██████████| 499/499 [36:44:31<00:00, 265.07s/it]
EPOCH [1/500]: Train Loss: 0.16409  FID: 0.00212
EPOCH [2/500]: Train Loss: 0.04658  FID: 0.00100
EPOCH [3/500]: Train Loss: 0.03472  FID: 0.00063
EPOCH [4/500]: Train Loss: 0.02952  FID: 0.00046
EPOCH [5/500]: Train Loss: 0.02716  FID: 0.00035
EPOCH [6/500]: Train Loss: 0.02490  FID: 0.00028
EPOCH [7/500]: Train Loss: 0.02358  FID: 0.00024
EPOCH [8/500]: Train Loss: 0.02294  FID: 0.00020
EPOCH [9/500]: Train Loss: 0.02255  FID: 0.00017
EPOCH [19/500]: Train Loss: 0.01928  FID: 0.00015
EPOCH [29/500]: Train Loss: 0.01828  FID: 0.00014
EPOCH [39/500]: Train Loss: 0.01747  FID: 0.00012
EPOCH [49/500]: Train Loss: 0.01726  FID: 0.00011
EPOCH [59/500]: Train Loss: 0.01701  FID: 0.00010
EPOCH [69/500]: Train Loss: 0.01668  FID: 0.00009
EPOCH [79/500]: Train Loss: 0.01666  FID: 0.00009
EPOCH [89/500]: Train Loss: 0.01661  FID: 0.00008
EPOCH [99/500]: Train Loss: 0.01636  FID: 0.00007
EPOCH [109/500]: Train Loss: 0.01607  FID: 0.00007
EPOCH [119/500]: Train Loss: 0.01610  FID: 0.00007
EPOCH [129/500]: Train Loss: 0.01605  FID: 0.00006
EPOCH [139/500]: Train Loss: 0.01619  FID: 0.00006
EPOCH [149/500]: Train Loss: 0.01591  FID: 0.00005
EPOCH [159/500]: Train Loss: 0.01575  FID: 0.00005
EPOCH [169/500]: Train Loss: 0.01565  FID: 0.00005
EPOCH [179/500]: Train Loss: 0.01567  FID: 0.00005
EPOCH [189/500]: Train Loss: 0.01550  FID: 0.00004
EPOCH [199/500]: Train Loss: 0.01560  FID: 0.00004
EPOCH [209/500]: Train Loss: 0.01518  FID: 0.00004
EPOCH [219/500]: Train Loss: 0.01528  FID: 0.00004
EPOCH [229/500]: Train Loss: 0.01510  FID: 0.00004
EPOCH [239/500]: Train Loss: 0.01503  FID: 0.00004
EPOCH [249/500]: Train Loss: 0.01495  FID: 0.00004
EPOCH [259/500]: Train Loss: 0.01475  FID: 0.00003
EPOCH [269/500]: Train Loss: 0.01481  FID: 0.00003
EPOCH [279/500]: Train Loss: 0.01449  FID: 0.00003
EPOCH [289/500]: Train Loss: 0.01442  FID: 0.00003
EPOCH [299/500]: Train Loss: 0.01429  FID: 0.00003
EPOCH [309/500]: Train Loss: 0.01424  FID: 0.00003
EPOCH [319/500]: Train Loss: 0.01421  FID: 0.00003
EPOCH [329/500]: Train Loss: 0.01416  FID: 0.00003
EPOCH [339/500]: Train Loss: 0.01384  FID: 0.00003
EPOCH [349/500]: Train Loss: 0.01402  FID: 0.00003
EPOCH [359/500]: Train Loss: 0.01363  FID: 0.00002
EPOCH [369/500]: Train Loss: 0.01351  FID: 0.00002
EPOCH [379/500]: Train Loss: 0.01351  FID: 0.00002
EPOCH [389/500]: Train Loss: 0.01341  FID: 0.00002
EPOCH [399/500]: Train Loss: 0.01328  FID: 0.00002
EPOCH [409/500]: Train Loss: 0.01318  FID: 0.00002
EPOCH [419/500]: Train Loss: 0.01308  FID: 0.00002
EPOCH [429/500]: Train Loss: 0.01292  FID: 0.00002
EPOCH [439/500]: Train Loss: 0.01304  FID: 0.00002
EPOCH [449/500]: Train Loss: 0.01282  FID: 0.00002
EPOCH [459/500]: Train Loss: 0.01276  FID: 0.00002
EPOCH [469/500]: Train Loss: 0.01257  FID: 0.00002
EPOCH [479/500]: Train Loss: 0.01248  FID: 0.00002
EPOCH [489/500]: Train Loss: 0.01243  FID: 0.00002
EPOCH [499/500]: Train Loss: 0.01230  FID: 0.00002

Saving Model At: /scratch/data/m22cs061/DDPM/save_model/cifar10.pth
